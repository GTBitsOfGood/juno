FROM alpine AS grpc-probe

ARG TARGETARCH

COPY ./docker/get_grpc_probe.sh /get_grpc_probe.sh

RUN --mount=type=cache,target=/var/cache/apk apk add --update wget

RUN chmod +x ./get_grpc_probe.sh
RUN TARGETARCH=$TARGETARCH ./get_grpc_probe.sh

# TODO: Switch over to minimal node installation
FROM node:18 AS deps

ARG TARGETARCH

# pnpm needs to be added to the global path
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

RUN corepack prepare pnpm@10.0.0 --activate

COPY ./docker/get_protoc.sh /get_protoc.sh
RUN chmod +x /get_protoc.sh
RUN TARGETARCH=$TARGETARCH /get_protoc.sh

RUN cp /protoc/bin/protoc /usr/local/bin/protoc

WORKDIR /app

COPY . .

RUN chmod +x /app/packages/proto/gen_protos.sh

WORKDIR /app/packages/proto

RUN pnpm --filter juno-proto install --frozen-lockfile
RUN pnpm --filter juno-proto build

WORKDIR /app

RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install -r --frozen-lockfile --ignore-scripts

# TODO: Switch over to a minimal node installation
FROM node:18 AS base-service

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable
RUN corepack prepare pnpm@10.0.0 --activate

COPY --from=grpc-probe /grpc_health_probe /bin/grpc_health_probe

RUN chmod a+x /bin/grpc_health_probe

FROM base-service AS api-gateway-dev

WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules/

COPY --from=deps /app/packages/api-gateway/node_modules ./packages/node_modules/

COPY . .

COPY --from=deps /app/packages/proto/ ./packages/proto/

WORKDIR /app/packages/api-gateway

FROM base-service AS auth-service-dev

WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules/

COPY --from=deps /app/packages/auth-service/node_modules ./packages/node_modules/

COPY . .

COPY --from=deps /app/packages/proto/ ./packages/proto/

WORKDIR /app/packages/auth-service

FROM base-service AS email-service-dev

WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules/

COPY --from=deps /app/packages/email-service/node_modules ./packages/node_modules/

COPY . .

COPY --from=deps /app/packages/proto/ ./packages/proto/

WORKDIR /app/packages/email-service

FROM base-service AS file-service-dev

WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules/

COPY --from=deps /app/packages/file-service/node_modules ./packages/node_modules/

COPY . .

COPY --from=deps /app/packages/proto/ ./packages/proto/

WORKDIR /app/packages/file-service

FROM base-service AS analytics-service-dev

WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules/

COPY --from=deps /app/packages/analytics-service/node_modules ./packages/node_modules/

COPY . .

COPY --from=deps /app/packages/proto/ ./packages/proto/

WORKDIR /app/packages/analytics-service

FROM base-service AS logging-service-dev

WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules/

COPY --from=deps /app/packages/logging-service/node_modules ./packages/node_modules/

COPY . .

COPY --from=deps /app/packages/proto/ ./packages/proto/

WORKDIR /app/packages/logging-service

FROM base-service AS db-service-dev

WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules/

COPY --from=deps /app/packages/db-service/node_modules ./packages/node_modules/

COPY . .

COPY --from=deps /app/packages/proto/ ./packages/proto/

WORKDIR /app/packages/db-service

RUN echo $(ls -a -1 /app/node_modules)
RUN pnpm prisma generate
