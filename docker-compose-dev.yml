services:
  api-gateway:
    build:
      dockerfile: Dockerfile.dev
      target: api-gateway-dev
      context: .
    ports:
      - 3000
    entrypoint: pnpm --filter api-gateway ${GATEWAY_COMMAND-start:dev}
    environment:
      DB_SERVICE_ADDR: db-service:5000
      AUTH_SERVICE_ADDR: auth-service:5000
      EMAIL_SERVICE_ADDR: email-service:5000
      LOGGING_SERVICE_ADDR: logging-service:5000
      FILE_SERVICE_ADDR: file-service:5000
      SENTRY_DSN: 'https://895c35e671ebe116967d7818f6c99efb@o4506876382609408.ingest.us.sentry.io/4507926410559488'
    env_file:
      - path: ./.env.dev.local
        required: false
      - path: ./.env.gh-actions.local
        required: false
    networks:
      - bog-api-net
    depends_on:
      auth-service:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl http://api-gateway:3000/ || exit 1']
      interval: 5s
      timeout: 10s
      retries: 20

  auth-service:
    build:
      dockerfile: Dockerfile.dev
      target: auth-service-dev
      context: .
    ports:
      - 5000
    entrypoint: pnpm --filter auth-service ${AUTH_COMMAND-start:dev}
    environment:
      AUTH_SERVICE_ADDR: auth-service:5000
      DB_SERVICE_ADDR: db-service:5000
      EMAIL_SERVICE_ADDR: email-service:5000
      LOGGING_SERVICE_ADDR: logging-service:5000
      FILE_SERVICE_ADDR: file-service:5000
      SENTRY_DSN: 'https://f65c541f1d3217cf4752046e8ce46ec4@o4506876382609408.ingest.us.sentry.io/4507926438346752'
    networks:
      - bog-api-net
    depends_on:
      db-service:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'grpc_health_probe -addr=auth-service:5000']
      interval: 5s
      timeout: 10s
      retries: 20

  email-service:
    build:
      dockerfile: Dockerfile.dev
      target: email-service-dev
      context: .
    ports:
      - 5000
    entrypoint: pnpm --filter email-service ${EMAIL_COMMAND-start:dev}
    environment:
      AUTH_SERVICE_ADDR: auth-service:5000
      DB_SERVICE_ADDR: db-service:5000
      EMAIL_SERVICE_ADDR: email-service:5000
      LOGGING_SERVICE_ADDR: logging-service:5000
      FILE_SERVICE_ADDR: file-service:5000
      NODE_ENV: test
      SENDGRID_API_KEY: test-key
      SENTRY_DSN: 'https://46b6656a920cc32333cc37cdc2c1ce12@o4506876382609408.ingest.us.sentry.io/4507926519873536'
    networks:
      - bog-api-net
    depends_on:
      db-service:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'grpc_health_probe -addr=email-service:5000']
      interval: 5s
      timeout: 10s
      retries: 20

  file-service:
    build:
      dockerfile: Dockerfile.dev
      target: file-service-dev
      context: .
    ports:
      - 5000
    entrypoint: pnpm --filter file-service ${FILE_COMMAND-start:dev}
    environment:
      AUTH_SERVICE_ADDR: auth-service:5000
      DB_SERVICE_ADDR: db-service:5000
      EMAIL_SERVICE_ADDR: email-service:5000
      LOGGING_SERVICE_ADDR: logging-service:5000
      FILE_SERVICE_ADDR: file-service:5000
      NODE_ENV: test
      SENDGRID_API_KEY: test-key
      SENTRY_DSN: 'https://dcdd535795155f880fa5728fbcad0d57@o4506876382609408.ingest.us.sentry.io/4508246900277248'
    env_file:
      - path: ./.env.dev.local
        required: false
      - path: ./.env.gh-actions.local
        required: false
    networks:
      - bog-api-net
    depends_on:
      db-service:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'grpc_health_probe -addr=file-service:5000']
      interval: 5s
      timeout: 10s
      retries: 20

  logging-service:
    build:
      dockerfile: Dockerfile.dev
      target: logging-service-dev
      context: .
    ports:
      - 5000
    entrypoint: pnpm --filter logging-service ${LOGGING_COMMAND-start:dev}
    environment:
      AUTH_SERVICE_ADDR: auth-service:5000
      DB_SERVICE_ADDR: db-service:5000
      EMAIL_SERVICE_ADDR: email-service:5000
      LOGGING_SERVICE_ADDR: logging-service:5000
      DATABASE_URL: postgresql://user:password@db
      FILE_SERVICE_ADDR: file-service:5000
      SENTRY_DSN: 'https://9057d8b86db87880b424db0d8e923cfc@o4506876382609408.ingest.us.sentry.io/4507926523478016'
    networks:
      - bog-api-net
    healthcheck:
      test: ['CMD-SHELL', 'grpc_health_probe -addr=db-service:5000']
      interval: 5s
      timeout: 10s
      retries: 20

  db-service:
    build:
      dockerfile: Dockerfile.dev
      target: db-service-dev
      context: .
    ports:
      - 5000
    entrypoint: /bin/sh -c "DB_COMMAND=${DB_COMMAND-start:dev} RUN_MODE=${RUN_MODE-dev} ./entrypoint.sh"
    environment:
      AUTH_SERVICE_ADDR: auth-service:5000
      DB_SERVICE_ADDR: db-service:5000
      EMAIL_SERVICE_ADDR: email-service:5000
      LOGGING_SERVICE_ADDR: logging-service:5000
      FILE_SERVICE_ADDR: file-service:5000
      DATABASE_URL: postgresql://user:password@db
      NODE_ENV: test
      SENTRY_DSN: 'https://235226366783809ee8337a530785707f@o4506876382609408.ingest.us.sentry.io/4507926518038528'
    networks:
      - bog-api-net
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'grpc_health_probe -addr=db-service:5000']
      interval: 5s
      timeout: 10s
      retries: 20

  db:
    image: postgres
    restart: always
    ports:
      - 5432
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
    networks:
      - bog-api-net
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U user']
      interval: 5s
      timeout: 10s
      retries: 20

networks:
  bog-api-net:
    driver: bridge
