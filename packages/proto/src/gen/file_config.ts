// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v5.28.2
// source: file_config.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';
import { File } from './file';
import { Bucket } from './file_bucket';

export const protobufPackage = 'juno.file_service.config';

export interface FileServiceConfig {
  id: number;
  buckets: Bucket[];
  environment: string;
  files: File[];
}

export interface GetFileServiceConfigRequest {
  id: number;
  environment: string;
}

export interface CreateFileServiceConfigRequest {
  projectId: number;
  buckets: Bucket[];
  files: File[];
  environment: string;
}

export interface UpdateFileServiceConfigRequest {
  id: number;
  buckets: Bucket[];
  files: File[];
  environment: string;
}

export interface DeleteFileServiceConfigRequest {
  id: number;
  environment: string;
}

export const JUNO_FILE_SERVICE_CONFIG_PACKAGE_NAME = 'juno.file_service.config';

export interface FileServiceConfigDbServiceClient {
  getConfig(
    request: GetFileServiceConfigRequest,
  ): Observable<FileServiceConfig>;

  createConfig(
    request: CreateFileServiceConfigRequest,
  ): Observable<FileServiceConfig>;

  deleteConfig(
    request: DeleteFileServiceConfigRequest,
  ): Observable<FileServiceConfig>;

  updateConfig(
    request: UpdateFileServiceConfigRequest,
  ): Observable<FileServiceConfig>;
}

export interface FileServiceConfigDbServiceController {
  getConfig(
    request: GetFileServiceConfigRequest,
  ):
    | Promise<FileServiceConfig>
    | Observable<FileServiceConfig>
    | FileServiceConfig;

  createConfig(
    request: CreateFileServiceConfigRequest,
  ):
    | Promise<FileServiceConfig>
    | Observable<FileServiceConfig>
    | FileServiceConfig;

  deleteConfig(
    request: DeleteFileServiceConfigRequest,
  ):
    | Promise<FileServiceConfig>
    | Observable<FileServiceConfig>
    | FileServiceConfig;

  updateConfig(
    request: UpdateFileServiceConfigRequest,
  ):
    | Promise<FileServiceConfig>
    | Observable<FileServiceConfig>
    | FileServiceConfig;
}

export function FileServiceConfigDbServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      'getConfig',
      'createConfig',
      'deleteConfig',
      'updateConfig',
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcMethod('FileServiceConfigDbService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcStreamMethod('FileServiceConfigDbService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
  };
}

export const FILE_SERVICE_CONFIG_DB_SERVICE_NAME = 'FileServiceConfigDbService';
