syntax = "proto3";

package juno.email;

import "identifiers.proto";

service EmailService {
  rpc setup(SetupRequest) returns (SetupResponse);
  rpc sendEmail(SendEmailRequest) returns (SendEmailResponse);
  rpc registerSender(RegisterSenderRequest) returns (RegisterSenderResponse);
  rpc authenticateDomain(AuthenticateDomainRequest)
      returns (AuthenticateDomainResponse);
  rpc verifyDomain(VerifyDomainRequest) returns (VerifyDomainResponse);
  rpc getStatistics(GetStatisticsRequest) returns (StatisticResponses);
}

service EmailDbService {
  rpc getEmailSender(identifiers.EmailSenderIdentifier) returns (EmailSender);
  rpc createEmailSender(CreateEmailSenderRequest) returns (EmailSender);
  rpc updateEmailSender(UpdateEmailSenderRequest) returns (EmailSender);
  rpc deleteEmailSender(DeleteEmailSenderRequest) returns (EmailSender);
  rpc getEmailDomain(EmailDomainRequest) returns (EmailDomain);
  rpc createEmailDomain(CreateEmailDomainRequest) returns (EmailDomain);
  rpc createEmailServiceConfig(CreateEmailServiceConfigRequest)
      returns (EmailServiceConfig);
  rpc getEmailServiceConfig(GetEmailServiceConfigRequest)
      returns (EmailServiceConfig);
}

message EmailSender {
  string username = 2;
  optional string description = 3;
  repeated identifiers.ProjectIdentifier projects = 4;
  string domain = 5;
}

message SendEmailRequest {
  repeated EmailRecipient recipients = 1;
  repeated EmailRecipient cc = 2;
  repeated EmailRecipient bcc = 3;
  SenderInfo sender = 4;
  string subject = 5;
  repeated EmailContent content = 6;
  int64 configId = 7;
  string configEnvironment = 8;
  repeated EmailRecipient reply_to_list = 9;
}

message SenderInfo {
  string email = 1;
  string name = 2;
}

message SendEmailResponse { int32 statusCode = 1; }

message EmailRecipient {
  string email = 1;
  optional string name = 2;
}

message EmailContent {
  string type = 1;
  string value = 2;
}

message CreateEmailSenderRequest {
  string username = 1;
  int64 configId = 2;
  optional string description = 3;
  string domain = 4;
  string configEnvironment = 5;
}

message EmailUpdateParams { optional string description = 1; }

message UpdateEmailSenderRequest {
  identifiers.EmailSenderIdentifier emailSenderIdentifier = 1;
  EmailUpdateParams updateParams = 2;
}

message DeleteEmailSenderRequest {
  identifiers.EmailSenderIdentifier emailSenderIdentifier = 1;
  int64 configId = 2;
  string configEnvironment = 3;
}

enum AggregateInterval {
  DAY = 0;
  WEEK = 1;
  MONTH = 2;
}

message GetStatisticsRequest {
  optional int32 limit = 1;
  optional int32 offset = 2;
  optional AggregateInterval aggregated_by = 3;
  string start_date = 4;
  optional string end_date = 5;
  int64 configId = 7;
  string configEnvironment = 8;
}

message StatisticResponses {
  repeated StatisticResponse responses = 1;
}

message StatisticResponse {
  string date = 1;
  int32 clicks = 2;
  int32 unique_clicks = 3;
  int32 opens = 4;
  int32 unique_opens = 5;
  int32 blocks = 6;
  int32 bounce_drops = 7;
  int32 bounces = 8;
  int32 deferred = 9;
  int32 delivered = 10;
  int32 invalid_emails = 11;
  int32 processed = 12;
  int32 requests = 13;
  int32 spam_report_drops = 14;
  int32 spam_reports = 15;
  int32 unsubscribe_drops = 16;
  int32 unsubscribes = 17;
}

message SendEmailSenderRequestResponse { bool success = 1; }

message RegisterSenderRequest {
  string from_email = 1;
  string from_name = 2;
  string reply_to = 3;
  int64 configId = 4;
  string configEnvironment = 5;
  string nickname = 6;
  string address = 7;
  string city = 8;
  string state = 9;
  string country = 10;
  string zip = 11;
}

message RegisterSenderResponse {
  int32 status_code = 1;
  string message = 2;
}

message AuthenticateDomainRequest {
  string domain = 1;
  optional string subdomain = 2;
  int64 configId = 3;
  string configEnvironment = 4;
}

message AuthenticateDomainResponse {
  int64 id = 1;
  string valid = 2;
  SendGridDnsRecords records = 3;
  int32 statusCode = 4;
}

message SendGridDnsRecords {
  SendGridRecord mail_cname = 1;
  SendGridRecord dkim1 = 2;
  SendGridRecord dkim2 = 3;
}

message SendGridRecord {
  bool valid = 1;
  string type = 2;
  string host = 3;
  string data = 4;
}

message EmailDomain {
  string domain = 1;
  optional string subdomain = 2;
  int64 sendgridId = 3;
  repeated identifiers.ProjectIdentifier projects = 4;
}

message EmailDomainRequest { string domain = 1; }

message CreateEmailDomainRequest {
  string domain = 1;
  optional string subdomain = 2;
  int64 sendgridId = 3;
  int64 configId = 4;
  string configEnvironment = 5;
}

message VerifyDomainRequest {
  string domain = 1;
  int64 configId = 2;
  string configEnvironment = 3;
}

message VerifyDomainResponse {
  int64 id = 1;
  bool valid = 2;
  SendGridDnsRecords records = 3;
  int32 statusCode = 4;
}

message CreateEmailServiceConfigRequest {
  int64 projectId = 1;
  string environment = 2;
  string sendgridKey = 3;
}

message EmailServiceConfig {
  int64 id = 1;
  string environment = 2;
  string sendgridKey = 3;
  repeated EmailDomain domains = 4;
  repeated EmailSender senders = 5;
}

message SetupRequest {
  int64 projectId = 1;
  string environment = 2;
  string sendgridKey = 3;
}

message SetupResponse {
  bool success = 1;
  EmailServiceConfig config = 2;
}

message GetEmailServiceConfigRequest {
  int64 id = 1;
  string environment = 2;
}
